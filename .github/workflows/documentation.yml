name: Documentation

on:
  push:
    branches:
      - 'main'
    tags: 
      - '*'
  pull_request:
    branches:
      - 'main'
    paths:
      - '.github/workflows/documentation.yml'
      - 'src/**'
      - 'ext/**'
      - 'docs/**'
      - 'Project.toml'
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  statuses: write
        
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Julia
        uses: julia-actions/setup-julia@v2
      - name: Pull Julia cache
        uses: julia-actions/cache@v2
      - name: Install documentation dependencies
        run: julia --project=docs -e 'using Pkg; pkg"dev ."; Pkg.instantiate(); Pkg.precompile(); Pkg.status()'
      #- name: Creating new mds from src
      - name: Build and deploy docs
        uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For authentication with GitHub Actions token
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # For authentication with SSH deploy key
          GKSwstype: "100" # for Plots.jl plots (if you have them)
          JULIA_DEBUG: "Documenter"
          DATADEPS_ALWAYS_ACCEPT: true
