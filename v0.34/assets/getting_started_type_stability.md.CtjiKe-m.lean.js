import{_ as h,c as n,o as t,aA as e,j as i,a}from"./chunks/framework.ByPhBq4W.js";const m=JSON.parse('{"title":"The Importance of Type-Stability","description":"","frontmatter":{},"headers":[],"relativePath":"getting_started/type_stability.md","filePath":"getting_started/type_stability.md","lastUpdated":null}'),l={name:"getting_started/type_stability.md"},k={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},p={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.332ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.524ex",height:"2.732ex",role:"img",focusable:"false",viewBox:"0 -1060.7 1557.7 1207.4","aria-hidden":"true"},d={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},r={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.441ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 1079 1000","aria-hidden":"true"};function o(g,s,y,c,u,E){return t(),n("div",null,[s[18]||(s[18]=e("",37)),i("p",null,[s[2]||(s[2]=a("Before making a practical example, let's see the internal structure of the ",-1)),s[3]||(s[3]=i("a",{href:"/QuantumToolbox.jl/v0.34/resources/api#QuantumToolbox.QuantumObject"},[i("code",null,"QuantumObject")],-1)),s[4]||(s[4]=a(" type. As an example, we consider the case of three qubits, and we study the internal structure of the ",-1)),i("mjx-container",k,[(t(),n("svg",p,[...s[0]||(s[0]=[e("",1)])])),s[1]||(s[1]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("msubsup",null,[i("mrow",{"data-mjx-texclass":"ORD"},[i("mover",null,[i("mi",null,"σ"),i("mo",{stretchy:"false"},"^")])]),i("mi",null,"x"),i("mrow",{"data-mjx-texclass":"ORD"},[i("mo",{stretchy:"false"},"("),i("mn",null,"2"),i("mo",{stretchy:"false"},")")])])])],-1))]),s[5]||(s[5]=a(" operator:",-1))]),s[19]||(s[19]=e("",33)),i("p",null,[s[8]||(s[8]=a("In some functions of ",-1)),s[9]||(s[9]=i("code",null,"QuantumToolbox.jl",-1)),s[10]||(s[10]=a(", you may find the use of the ",-1)),s[11]||(s[11]=i("a",{href:"https://docs.julialang.org/en/v1/base/base/#Base.Val",target:"_blank",rel:"noreferrer"},[i("code",null,"Val")],-1)),s[12]||(s[12]=a(" type in the arguments. This is a trick to pass a value at compile time, and it is very useful to avoid type instabilities. Let's make a very simple example, where we want to create a Fock state ",-1)),i("mjx-container",d,[(t(),n("svg",r,[...s[6]||(s[6]=[e("",1)])])),s[7]||(s[7]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("mo",{"data-mjx-texclass":"ORD",stretchy:"false"},"|"),i("mi",null,"j"),i("mo",{fence:"false",stretchy:"false"},"⟩")])],-1))]),s[13]||(s[13]=a(" of a given dimension ",-1)),s[14]||(s[14]=i("code",null,"N",-1)),s[15]||(s[15]=a(", and we give the possibility to create it as a sparse or dense vector. At first, we can write the function without using ",-1)),s[16]||(s[16]=i("code",null,"Val",-1)),s[17]||(s[17]=a(":",-1))]),s[20]||(s[20]=e("",18))])}const f=h(l,[["render",o]]);export{m as __pageData,f as default};
